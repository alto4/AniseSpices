{"version":3,"sources":["components/Cart.tsx","components/Navbar.tsx","components/Footer.tsx","components/Home.tsx","components/Shop.tsx","data/Items.ts","components/ShopItem.tsx","components/Contact.tsx","App.tsx","index.tsx"],"names":["Cart","cartItems","setShowCart","removeItem","updateItemQuantity","setQuantity","quantity","className","onClick","length","map","item","index","src","imageURL","alt","name","data-id","id","e","type","value","onChange","price","toFixed","unit","reduce","total","Navbar","items","useState","showCart","console","log","to","Footer","Home","Shop","addItem","shopItems","setShopItems","setItemQuantity","featuredItems","addItemToCart","currentTarget","getAttribute","target","updatedItems","description","split","Number","parseInt","toString","ShopItem","props","match","params","itemIndex","findIndex","Contact","App","setCartItems","existingIndex","existingItem","updatedCartItems","cartIndex","splice","exact","path","render","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.851042a8.chunk.js","sourcesContent":["import React from 'react'\r\n\r\ninterface Item {\r\n  id: number,\r\n  name: string,\r\n  price: number,\r\n  unit: string,\r\n  quantity: number,\r\n  imageURL: string,\r\n  description: string\r\n}\r\n\r\nconst Cart: React.FC<{cartItems: any, setShowCart: Function, updateItemQuantity: Function, removeItem: Function, setQuantity: Function, items: Array<object>, quantity: number}> = ({cartItems, setShowCart, removeItem, updateItemQuantity, setQuantity, quantity}) => {\r\n\r\n  return (\r\n    <aside className=\"cart\">\r\n      <h2>Your Cart</h2> \r\n      <button className=\"btn-close-cart\" onClick={() => { setShowCart(false)}}>X</button>\r\n      <p>You currently have {cartItems.length} items in your cart.</p>\r\n      \r\n      {cartItems.map((item: Item, index: string) => {\r\n        return (\r\n          <div className='cart-item'>\r\n            <img src={item.imageURL} alt=\"\" />\r\n            <h4>{item.name}</h4>\r\n            <div className=\"quantity-section\">\r\n              <p>Quanitity:</p>\r\n              <div className=\"quantity-buttons\">\r\n              <button className=\"btn-decrement\" data-id={item.id} onClick={(e) => { updateItemQuantity(e, item.quantity - 1);}}>-</button>\r\n                <input type=\"number\" name=\"quantity\" value={item.quantity} data-id={item.id} onChange={(e) => { updateItemQuantity(e, item.quantity);}}/> \r\n                <button className=\"btn-increment\" data-id={item.id} onClick={(e) => { updateItemQuantity(e, item.quantity + 1);}}>+</button>\r\n              </div> \r\n            </div>\r\n            <p>${(item.quantity * item.price).toFixed(2)} <br/><small>${item.price}/{item.unit}</small></p>\r\n            <button className=\"btn-delete\"  onClick={(e) => { removeItem(item.id);}}><i className=\"fa fa-trash fa-sm\"></i></button>\r\n          </div>\r\n        )\r\n      })}\r\n      <p>Cart Total: ${ cartItems.reduce((total: number, item: Item) => (total + (item.quantity * item.price)), 0).toFixed(2)} </p>\r\n      <div className=\"cart-buttons\">\r\n        <button className=\"btn\">Checkout</button>\r\n        <button className=\"btn\" onClick={() => {setShowCart(false)}}>Shop More</button>\r\n      </div>\r\n    </aside>\r\n  )\r\n}\r\n\r\nexport default Cart\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Cart from './Cart';\r\n\r\n\r\nconst Navbar: React.FC<{cartItems: any, updateItemQuantity: any, removeItem: any, setQuantity: Function, items: any, quantity: number}> = ({cartItems, updateItemQuantity, removeItem, setQuantity, items, quantity}) => {\r\n\r\n  const [showCart, setShowCart] = useState(false);\r\n  console.log('props passed to navbar: ' + cartItems)\r\n\r\n  return (\r\n   <>\r\n      <nav>\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/shop\">Shop</Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <h1>Anise Spice Market</h1>\r\n\r\n        <ul>\r\n          <li>\r\n            <Link to=\"\">\r\n              <i className=\"fa fa-search\"></i>\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <button className=\"btn btn-cart\" onClick={()=> { setShowCart(!showCart)}}>\r\n            <i className=\"fa fa-shopping-cart\"></i> {cartItems.length}\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n\r\n      \r\n      {showCart && (\r\n         <Cart cartItems={cartItems} setShowCart={setShowCart} updateItemQuantity={updateItemQuantity} removeItem={removeItem} items={items} setQuantity={setQuantity} quantity={quantity} />\r\n      )}\r\n      \r\n        </>\r\n  );\r\n\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <p>&copy; Anise Spice Market, 2021 </p>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Home: React.FC = () => {\r\n  return (\r\n    <Fragment>\r\n      <section className=\"hero-section\">\r\n        <div className=\"hero-left\">\r\n          <h2>Spice Up Your Life</h2>\r\n          <p>Bringing the world's finest herbs and spices to your doorstep.</p>\r\n          <Link to=\"/shop\"><button className=\"btn btn-shop\">Browse Store</button></Link>\r\n        </div>\r\n      </section>\r\n      <section className=\"about-section\">\r\n        <div className=\"container\">\r\n          <div className=\"about-text\">\r\n            <h2>About Our Shop</h2>\r\n            <p>What started as an online stall at a flea market in Courtice, Ontario has expanded into a full-fledged store shipping the highest quality products worldwide. \r\n              Having a strong passion for the worlds many food cultures, Scott, a former chef, decided to move to a less stressful part of the industry that allowed him to \r\n              use his research and communication, as well as business skills, to bring spices and other global product to food afficianados around the world.\r\n            </p>\r\n          </div>\r\n          <img src=\"https://images.pexels.com/photos/2632292/pexels-photo-2632292.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\" alt=\"\" />\r\n    \r\n        </div>\r\n         </section>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface Item {\r\n  id: number,\r\n  name: string,\r\n  price: number,\r\n  unit: string,\r\n  quantity: number,\r\n  imageURL: string,\r\n  description: string\r\n}\r\n\r\nconst Shop: React.FC<{addItem: Function, setQuantity: Function, items: Array<Item>, quantity: number}> = ({addItem, setQuantity, items, quantity}) => {\r\n  \r\n  const [shopItems, setShopItems] = useState(items);\r\n  const [itemQuantity, setItemQuantity] = useState(1)\r\n  let featuredItems = [shopItems[0], shopItems[1], shopItems[2]]\r\n\r\n  const addItemToCart = (e: any) => {\r\n    let id = e.currentTarget.getAttribute('data-id');\r\n    addItem(items[id - 1]);\r\n    console.log('CLICK! on item ' + items[id - 1].name)\r\n  }\r\n\r\n  const updateItemQuantity = (e: any, value: number) => {\r\n    let id = e.currentTarget.getAttribute('data-id');\r\n    e.target.value = value;\r\n    let updatedItems = [...shopItems];\r\n\r\n    console.log('Updating quantity of item with data-id of ' + id + ' to ' + value + 'units')\r\n    console.log('Cart items before update:' + updatedItems[id - 1])\r\n    updatedItems[id - 1].quantity = value;\r\n    setShopItems(updatedItems);\r\n  }\r\n\r\n  return (\r\n    <section className=\"store-section\">\r\n      <div className=\"container\">\r\n        <h1><i className=\"fa fa-pepper-hot fa-sm\"></i> Shop Spices</h1>\r\n \r\n\r\n        <h2>Our Favourites</h2>\r\n        <div className=\"items-container\">\r\n          {featuredItems.map((item, index) => { return (      \r\n          <div className=\"item-card\">\r\n            <h3>{item.name}</h3>\r\n            <img src={item.imageURL} alt={item.description.split('.')[0] + '.'} />\r\n            <div className=\"product-card-price\">\r\n              <p>Price: ${item.price} / {item.unit}</p>\r\n              <div className=\"quantity-buttons\">\r\n                <button className=\"btn-decrement\" data-id={item.id} onClick={(e) => {setItemQuantity(item.quantity - 1); updateItemQuantity(e, item.quantity -1);}}>-</button>\r\n                <input type=\"number\" name=\"quantity\" value={item.quantity} data-id={item.id} onChange={(e) => { setItemQuantity(Number.parseInt(e.target.value.toString())); updateItemQuantity(e, item.quantity);}}/> \r\n                <button className=\"btn-increment\" data-id={item.id} onClick={(e) => {setItemQuantity(item.quantity + 1); updateItemQuantity(e, item.quantity + 1);}}>+</button>\r\n              </div> \r\n            </div>\r\n             \r\n            <div className=\"buttons\">\r\n              <button className=\"btn btn-block\" data-id={item.id} onClick={addItemToCart}><i className=\"fa fa-shopping-cart\" ></i> Add</button>\r\n              <Link to={'shop/' + item.id} className=\"btn btn-block\"><i className=\"fa fa-list\" data-id={item.id}></i> Details</Link>\r\n            </div>\r\n          </div>)\r\n          })}       \r\n        </div>\r\n\r\n        <h2>All</h2>\r\n        <div className=\"items-container\">\r\n          {items.map((item: Item, index: number) => { return (      \r\n          <div className=\"item-card\">\r\n            <h3>{item.name}</h3>\r\n            <img src={item.imageURL} alt={item.description.split('.')[0] + '.'} />\r\n            <div className=\"product-card-price\">\r\n              <p>Price: ${item.price} / {item.unit}</p>\r\n              <div className=\"quantity-buttons\">\r\n                <button className=\"btn-decrement\" data-id={item.id} onClick={(e) => {setItemQuantity(item.quantity - 1); updateItemQuantity(e, item.quantity -1);}}>-</button>\r\n                <input type=\"number\" name=\"quantity\" value={item.quantity} data-id={item.id} onChange={(e) => { setItemQuantity(Number.parseInt(e.target.value.toString())); updateItemQuantity(e, item.quantity);}}/> \r\n                <button className=\"btn-increment\" data-id={item.id} onClick={(e) => {setItemQuantity(item.quantity + 1); updateItemQuantity(e, item.quantity + 1);}}>+</button>\r\n              </div> \r\n            </div>\r\n            <div className=\"buttons\">\r\n              <button className=\"btn btn-block\" data-id={item.id} onClick={addItemToCart}><i className=\"fa fa-shopping-cart\"></i> Add</button>\r\n              <Link to={'shop/' + item.id} className=\"btn btn-block\"><i className=\"fa fa-list\" data-id={item.id}></i> Details</Link>\r\n            </div>\r\n          </div>)\r\n          })}       \r\n        </div>\r\n          \r\n      </div>\r\n    </section>\r\n  )\r\n};\r\n\r\nexport default Shop;\r\n","interface Item {\r\n  id: number,\r\n  name: string,\r\n  price: number,\r\n  unit: string,\r\n  quantity: number,\r\n  imageURL: string,\r\n  description: string\r\n}\r\n\r\nconst items: Array<Item> = [\r\n  {\r\n    id: 1,\r\n    name: 'Amchur Powder',\r\n    price: 4.99,\r\n    unit: '1 oz',\r\n    quantity: 1,\r\n    imageURL: 'https://static.toiimg.com/thumb/msid-65873283,imgsize-206322,width-800,height-600,resizemode-75/65873283.jpg',\r\n    description: 'Amchoor or aamchur or amchur, also referred to as mango powder, is a fruity spice powder made from dried unripe green mangoes and is used as a citrusy seasoning. It is mostly produced in India and Pakistan, and is used to flavor foods and add the nutritional benefits of mangoes when the fresh fruit is out of season.'\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Black Cardamom',\r\n    price: 7.99,\r\n    unit: '1 oz',\r\n    quantity: 1,\r\n    imageURL: 'https://www.thespruceeats.com/thmb/JsVJNvdzco6tYsE9Z3RAviNTejE=/400x300/filters:no_upscale():max_bytes(150000):strip_icc()/cardamom-2500-56a2101a5f9b58b7d0c62aae.jpg',\r\n    description: 'Amomum subulatum, also known as Black cardamom, hill cardamom,[1] Bengal cardamom,[1] greater cardamom,[1] Indian cardamom,[1] Nepal cardamom,[1] winged cardamom,[1] big cardamon,[2][3] or brown cardamom, is a perennial herbaceous plant in the family Zingiberaceae. Its seed pods have a strong, camphor-like flavour, with a smoky character derived from the method of drying. In Hindi it is called बड़ी इलाइची (baḍī ilāichī).'\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Tasmanian Pepperberry',\r\n    price: 39.99,\r\n    unit: '1oz',\r\n    quantity: 1,\r\n    imageURL: 'https://wildpepperisle.com.au/wp-content/uploads/2020/02/Tasmanian-Pepperberry-1.png',\r\n    description: 'Tasmannia lanceolata (syn. Drimys lanceolata), commonly known as Tasmanian pepperberry or mountain pepper,[1] is a shrub native to woodlands and cool temperate rainforest of south-eastern Australia. The shrub varies from 2 to 10 m high. The aromatic leaves are lanceolate to narrow-elliptic or oblanceolate, 4–12 cm long, and 0.7–2.0 cm wide, with a distinctly pale undersurface. Stems are quite red in colour. The small cream or white flowers appear in summer and are followed by black, globose, two-lobed berries 5–8 mm wide, which appear in autumn.[2][3][4] There are separate male and female plants.[5]'\r\n  }, \r\n  {\r\n    id: 4,\r\n    name: 'Chaat Masala',\r\n    price: 9.99,\r\n    unit: '1oz',\r\n    quantity: 3,\r\n    imageURL: 'https://cdnimg.webstaurantstore.com/uploads/blog/2020/3/exotic-spices-indv-imgchaat-masala.png',\r\n    description: 'Chaat masala is an Indian spice blend made from amchoor, cumin, coriander, ginger, black salt, asafoetida, and chili powder. In India, the word chaat refers to a savory, crunchy snack seasoned with chaat masala. This popular blend tastes best when made with freshly ground spices, and the ingredients can vary slightly between blends. The key components that give chaat masala its signature eggy, zingy flavor are black salt, asafoetida, and amchoor.'\r\n  },  \r\n  {\r\n    id: 5,\r\n    name: 'Fenugreek',\r\n    price: 5.99,\r\n    unit: '1oz',\r\n    quantity: 1,\r\n    imageURL: 'https://cdnimg.webstaurantstore.com/uploads/blog/2020/3/exotic-spices-indv-imgfenugreek.png',\r\n    description: 'Fenugreek is another secret ingredient of Indian cooking that complements the flavors of other spices. It is both sweet and bitter, which gives it the ability to balance out sour, spicy notes in curries and sauces. Small, hard fenugreek seeds can be toasted to remove bitterness before being ground. The leaves of fenugreek are also edible and can be used in place of other types of leafy greens like mustard greens.'\r\n  },  \r\n  {\r\n    id: 6,\r\n    name: 'Aleppo Pepper',\r\n    price: 4.99,\r\n    unit: '1oz',\r\n    quantity: 1,\r\n    imageURL: 'https://cdnimg.webstaurantstore.com/uploads/blog/2020/3/exotic-spices-indv-imgaleppo-pepper.png',\r\n    description: 'Uniquely fruity and salty, Aleppo pepper originates from the city of Aleppo in Syria. War and conflict disrupted the trade of this chili pepper, and Syrian refugees brought the spice to Turkey, where most of the world’s Aleppo pepper is now produced. The ruby-red flakes of the Aleppo chili produce mild heat and have a tangy, raisin-like flavor.'\r\n  },  \r\n\r\n]\r\n\r\n\r\n\r\nexport default items\r\n","import React from 'react';\r\nimport items from '../data/Items';\r\n\r\nconst ShopItem: React.FC <{id: any} > = (props: any) => {\r\n  \r\n  const {id} = props.match.params;\r\n  const itemIndex = items.findIndex((item: any) => item.id === Number.parseInt(id));\r\n  const item = items[itemIndex];\r\n\r\n  return (\r\n    <section className=\"item-section\">\r\n      <div className=\"container\">\r\n     \r\n      <div className=\"item-details\">\r\n        <img src={item.imageURL} alt={item.description.split('.')[0]} />\r\n        <div className=\"item-text\">\r\n         <h1>{item.name}</h1>\r\n         <p>{item.description}</p>\r\n       </div>\r\n      </div>\r\n        \r\n      </div>   \r\n    </section>\r\n    \r\n  )\r\n}\r\n\r\nexport default ShopItem\r\n","import React from 'react'\r\n\r\nconst Contact: React.FC = () => {\r\n  return (\r\n    <div>\r\n      <p>Hello from Contact</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Contact\r\n","import './App.css';\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Footer from './components/Footer';\nimport Home from './components//Home';\nimport Shop from './components/Shop';\nimport ShopItem from './components/ShopItem';\nimport Contact from './components/Contact';\nimport items from './data/Items';\n\nconst App: React.FC = () => {\n\n  const [cartItems, setCartItems]: any = useState([]);\n  const [quantity, setQuantity] = useState(1);\n  \n  const addItem = (item: any) => {\n  \n  let existingIndex = cartItems.findIndex((existingItem: any) => item.id === existingItem.id);\n    if( existingIndex > -1) {\n      console.log('already in cart update quantity here! at index ' + existingIndex)\n      let updatedCartItems = [...cartItems];\n      updatedCartItems[existingIndex].quantity += item.quantity;\n      setCartItems(updatedCartItems);\n    } else {\n    let updatedCartItems = [...cartItems, item];\n    setCartItems(updatedCartItems);\n    }\n  }\n\n  const removeItem = (id: Number) => {\n\n    let updatedCartItems = [...cartItems];\n    let cartIndex = cartItems.findIndex((item: any) => item.id === id);\n\n    updatedCartItems.splice(cartIndex, 1);\n    setCartItems(updatedCartItems);\n  }\n\n  const updateItemQuantity = (e: any, value: number) => {\n    let id = e.currentTarget.getAttribute('data-id');\n    e.target.value = value;\n    let updatedCartItems = [...cartItems];\n    let cartIndex = cartItems.findIndex((item: any) => item.id === Number.parseInt(id));\n\n    if(value > 0) {\n      updatedCartItems[cartIndex].quantity = value;\n      setCartItems(updatedCartItems);\n    }\n  }\n\n  return (\n    <Router>\n      <Navbar cartItems={cartItems} updateItemQuantity={updateItemQuantity} items={items} quantity={quantity} setQuantity={setQuantity} removeItem={removeItem} />\n      <Switch>\n        <Route exact path=\"/shop\" render={() => {return <Shop addItem={addItem} items={items} quantity={quantity} setQuantity={setQuantity}/>}} />\n        <Route exact path=\"/contact\" component={Contact} />\n        <Route exact path=\"/shop/:id\" component={ShopItem}  />\n        <Route path=\"/\" component={Home} />\n      </Switch>\n      <Footer />\n    </Router>\n  ) \n  ;\n}\n\nexport default App;\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}